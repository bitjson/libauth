{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": { "project": "./tsconfig.json" },
  "env": { "es6": true },
  "ignorePatterns": [
    "node_modules",
    "build",
    "coverage",
    "src/lib/schema/ajv/*.js"
  ],
  "extends": ["bitauth"],
  "globals": { "BigInt": true, "console": true, "WebAssembly": true },
  "rules": {
    "max-params": "off",
    "@typescript-eslint/max-params": "error",
    "@typescript-eslint/no-unused-vars": "off", // already checked by TypeScript (this rule emits false positives on TSDoc `@link` usage)
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow"
      },
      { "selector": "typeLike", "format": ["PascalCase"] },
      { "selector": "enumMember", "format": ["camelCase", "UPPER_CASE"] } // Allow UPPER_CASE for opcodes
    ],
    "@typescript-eslint/no-unsafe-enum-comparison": "off",
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "functional/prefer-immutable-types": "off",
    "functional/type-declaration-immutability": "off",
    "functional/functional-parameters": [
      "error",
      {
        "allowRestParameter": false,
        "allowArgumentsKeyword": false,
        "enforceParameterCount": false
      }
    ],
    "import/no-internal-modules": ["error"],
    "import/extensions": ["error", "always"]
  },
  "overrides": [
    /*
     * Require all test files to import functionality from the entry point
     * (to test that exports are available to consumers as expected).
     */
    {
      "files": ["**.spec.ts", "**.bench.ts"],
      "rules": {
        "import/no-restricted-paths": [
          "error",
          {
            "zones": [
              {
                "target": "./src",
                "from": "./src/lib",
                "except": ["lib.ts", "(.*).helper.ts", "(.*).json"]
              }
            ]
          }
        ],
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-magic-numbers": "off",
        "functional/no-expression-statements": "off",
        "functional/no-conditional-statements": "off",
        "functional/functional-parameters": "off",
        "functional/immutable-data": "off",
        "functional/no-return-void": "off"
      }
    }
  ]
}
